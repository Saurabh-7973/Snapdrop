# on:
#   push:
#     branches:
#       - saurabh_dev

# name: Build My Apps

# jobs:
#   build:
#     name: Build and Release new apk
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Java 17
#         uses: actions/setup-java@v2
#         with:
#           distribution: 'adopt'
#           java-version: '17'

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: 'stable'

#       - name: Install Firebase CLI
#         run: |
#           curl -sL https://firebase.tools | bash

#       - name: Run FlutterFire configure
#         run: flutterfire configure

#       - name: Cache Flutter packages
#         uses: actions/cache@v2
#         with:
#           path: ~/.pub-cache
#           key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pub-cache-

#       - name: Get Flutter dependencies
#         run: flutter pub get

#       - name: Extract version from pubspec.yaml
#         id: extract_version
#         shell: pwsh
#         run: |
#           $content = Get-Content pubspec.yaml
#           $versionLine = $content | Select-String -Pattern '^version:'
#           $version = $versionLine -replace 'version:\s*', ''
#           echo "VERSION=$version" >> $env:GITHUB_ENV

#       - name: Build Flutter APK
#         run: flutter build apk --release

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           tag_name: v${{ env.VERSION }}
#           release_name: Release v${{ env.VERSION }}
#           draft: false
#           prerelease: false

#       - name: Upload Release Asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: build/app/outputs/apk/release/app-release.apk
#           asset_name: app-release.apk
#           asset_content_type: application/zip
